# {{ ansible_managed }}
{% if hashi_nomad_server_enable %}
name = "{{ ansible_hostname }}"
{% endif %}
datacenter = "{{ hashi_nomad_datacenter }}"
data_dir  = "{{ hashi_nomad_data_dir }}"
bind_addr = "{{ hashi_nomad_bind_addr }}"
log_level = "{{ hashi_nomad_log_level }}"
leave_on_terminate = {{ hashi_nomad_leave_on_terminate|lower }}
advertise {
  http = "{{ hashi_nomad_advertise_addr['http'] }}"
  rpc = "{{ hashi_nomad_advertise_addr['rpc'] }}"
  serf = "{{ hashi_nomad_advertise_addr['serf'] }}"
}

server {
  enabled = {{ hashi_nomad_server_enable|lower }}
{% if hashi_nomad_server_enable %}
  server_join {
  retry_join = [{% for item in hashi_nomad_server['retry_join'] %}"{{ item }}"{% if not loop.last %},{% endif %}{% endfor %}]
    retry_max = 3
    retry_interval = "15s"
  }
  bootstrap_expect = {{ hashi_nomad_server['bootstrap_expect'] }}
{% endif %}
}

{% if hashi_nomad_server_enable %}
ui {
  enabled =  {{ hashi_nomad_server['ui']|lower }}
{% if hashi_nomad_server['ui'] %}
{% if hashi_nomad_consul_enable %}
  consul {
    ui_url = "{{ hashi_nomad_consul['ui'] }}"
  }
{% endif %}
{% if hashi_nomad_vault_enable %}
  vault {
    ui_url = "{{ hashi_nomad_vault['ui'] }}"
  }
{% endif %}
{% endif %}
}
{% endif %}

acl {
  enabled = {{ hashi_nomad_acl_enable|lower }}
{% if hashi_nomad_acl_enable %}
  token_ttl = "{{ hashi_nomad_acl['token_ttl'] }}"
  policy_ttl = "{{ hashi_nomad_acl['policy_ttl'] }}"
  role_ttl: "{{ hashi_nomad_acl['policy_ttl'] }}"
  replication_token = "{{ hashi_nomad_acl['replication_token'] }}"
  token_min_expiration_ttl = "{{ hashi_nomad_acl['token_min_expiration_ttl'] }}"
  token_max_expiration_ttl = "{{ hashi_nomad_acl['token_max_expiration_ttl'] }}"
{% endif %}
}

{% if hashi_nomad_telemetry_enable %}
telemetry {
  collection_interval = "{{ hashi_nomad_telemetry['collection_interval'] }}"
  disable_hostname = {{ hashi_nomad_telemetry['disable_hostname']|lower }}
  publish_allocation_metrics = {{ hashi_nomad_telemetry['publish_allocation_metrics']|lower }}
  publish_node_metrics = {{ hashi_nomad_telemetry['publish_node_metrics']|lower }}
  prometheus_metrics = {{ hashi_nomad_telemetry['prometheus_metrics']|lower }}
}

{% endif %}
{% if hashi_nomad_consul_enable %}
consul {
  address = "{{ hashi_nomad_consul['address'] }}"
  token = "{{ hashi_nomad_consul['token'] }}"
  auto_advertise = {{ hashi_nomad_consul['auto_advertise']|lower }}
}

{% endif %}
vault {
  enabled = {{ hashi_nomad_vault_enable|lower }}
{% if hashi_nomad_vault_enable %}
  address = "{{ hashi_nomad_vault['address'] }}"
  token = "{{ hashi_nomad_vault['token'] }}"
  tls_skip_verify = {{ hashi_nomad_vault['tls_skip_verify'] }}
  create_from_role = "{{ hashi_nomad_vault['create_from_role'] }}"
{% endif %}
}

client {
  enabled = {{ hashi_nomad_client_enable|lower }}
{% if hashi_nomad_client_enable %}
  node_class = "{{ hashi_nomad_client['node_class'] }}"
  servers = [{% for item in hashi_nomad_server['retry_join'] %}"{{ item }}"{% if not loop.last %},{% endif %}{% endfor %}]
  reserved {
    cpu = "{{ hashi_nomad_client['reserved_cpu'] }}"
    memory = "{{ hashi_nomad_client['reserved_memory'] }}"
  }
  cni_path = "{{ hashi_nomad_client['cni_path'] }}"
  bridge_network_name = "{{ hashi_nomad_client['bridge_network_name'] }}"
  bridge_network_subnet = "{{ hashi_nomad_client['bridge_network_subnet'] }}"
{% endif %}
}

{% if hashi_nomad_docker_driver_enable %}
plugin "docker" {
  config {
    endpoint = "{{ hashi_nomad_docker_driver['endpoint'] }}"
    allow_privileged = {{ hashi_nomad_docker_driver['allow_privileged']|lower }}
    allow_caps = [{% for item in hashi_nomad_docker_driver['allow_caps'] %}"{{ item }}"{% if not loop.last %},{% endif %}{% endfor %}]
    volumes {
      enabled = {{ hashi_nomad_docker_driver['volumes_enabled']|lower }}
    }
  }
}

{% endif %}